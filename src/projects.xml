<?xml version="1.0" encoding="utf-8"?>

<projects>

  <title>Projects</title>
  <subtitle>Proud documentation of how I waste my time</subtitle>

  <introduction>Showroom for selected work. Conception, screenshots and further references.</introduction>

  <path>project/</path>

  <project id="tinysync">
    <date>2015-03-16</date>
    <title>Tinysync</title>
    <subtitle>A simplistic tool for synchronizing files between multiple computers</subtitle>

    <short>Tinysync is a simplistic tool for synchronizing files between multiple computers. It will ensure that a given directory has the same content on all configured systems. Tinysync's primary design goal is to be small, lightweight, and not to require any additional software to accomplish this task.</short>

    <content>
      <p>Cloud storage is everywhere these days. Everybody and their mother uses Internet-based storage services for making important data available on all devices. Broadband Internet access voids the necessity to copy files between the laptop in the office, the PC at home, and the private laptop by using USB sticks. Unfortunately, public cloud storage offerings come at a price &#8212; even when they're free.</p>

      <p>The basic principle of services such as <a href="https://www.dropbox.com/">Dropbox</a>, <a href="https://www.google.com/drive/">Google Drive</a> or Apple <a href="https://www.icloud.com/">iCloud</a> is to automatically upload one's important files to datacenters operated by profit-oriented companies anywhere in the world. Data is ultimately left outside of one's control: who can read, copy, and even modify the data becomes a question of trust to the company offering the service.</p>

      <p>Private, self-hosted solutions can be an attractive alternative to this scenario. While there are many full-blown solutions out there already, most of them are feature-rich and yet complex. When it comes to making efficient use of system resources then it's worth considering lightweight alternatives. Furthermore, for the security-minded user, less complexity results in a much smaller attack surface.</p>

      <p><em>Tinysync</em> is a simplistic tool for synchronizing files between multiple computers. It will ensure that a given directory has the same content on all configured systems &#8212; not more and not less. Tinysync's primary design goal is to be small, lightweight, and not to require any additional software to accomplish this task.</p>

      <p>The tool requires a central server to synchronize data with, but in fact does not require installation of any software on this machine. That server can be anything from a PC, a Raspberry Pi, to a virtual root server (VPS) hosted in a datacenter near you. The required software (ssh &amp; rsync) is typically installed automatically as part of the base Linux image on that system.</p>

      <h2 id="what-it-is-designed-for">What it is designed for</h2>

      <ul>
        <li>Tinysync is designed for a single user, working on different computers during different times of the day</li>
      </ul>

      <h2 id="what-it-is-not-designed-for">What it is <em>not</em> designed for</h2>

      <ul>
        <li>Tinysync is not designed for a single user, working on different computers simultaneously</li>
        <li>It is not designed for multiple users sharing files with each other</li>
      </ul>

      <h2 id="how-it-works">How it works</h2>

      <p>The following is a schematic example of a typical usage scenario:</p>
      <ol>
        <li>Computer A has Tinysync installed and it is able to connect with the server. Refer to the <a href="https://github.com/acch/tinysync#readme">README</a> for detailed installation instructions. The user now creates a new file on computer A.
        <img src="1_new_file_A.png" style="width: 60%" alt="alt text" /></li>
        <li>Tinysync will upload (push) the new file to the server based on a timer, automatically whenever the directory changes (via <a href="http://man7.org/linux/man-pages/man7/inotify.7.html">inotify</a>), or manually as initiated by the user.
        <img src="2_upload_A.png" style="width: 60%" alt="alt text" /></li>
        <li>Furthermore, Tinysync will continuously upload new versions to the server as the user keeps updating the file. Note that only changed parts of the file will be sent in order to minimize transfer times.</li>
        <li>At one point the user will log on to a different system, computer B in this example. Note that at this point computer A becomes inactive &#8212; the user works on computer B exclusively.
        <img src="3_computer_B.png" alt="alt text" /></li>
        <li>Tinysync will immediately download any new or changed files from the server. The user can continue working with the data as it was when leaving computer A.
        <img src="4_download_B.png" alt="alt text" /></li>
        <li>As before, any changes are automatically synchronized with the server. Any new files created on computer B will be uploaded to the server, waiting there for computer A to connect again...
        <img src="6_upload_B.png" alt="alt text" /></li>
      </ol>

      <h2 id="a-word-of-caution">A word of caution</h2>

      <p>Tinysync does not implement any logic for locking files or resolving conflicts. If files are modified on different clients simultaneously then some of these changes will get lost!</p>
    </content>
  </project>

</projects>
